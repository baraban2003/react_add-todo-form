{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/posts.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","username","getUserByTodo","userId","usersFromServer","find","TodoForm","onSubmit","useState","setTitle","isTitleErrorShow","setIsTitleErrorShow","setUserId","isUserErrorShow","setIsUserErrorShow","action","method","event","preventDefault","trim","htmlFor","type","placeholder","value","onChange","target","disabled","option","getPostsWithUsers","getNewTodoID","Math","max","App","setTodos","newTodo","currentTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53c78a04.chunk.js","sourcesContent":["import React from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport './TodoInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <li\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </li>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map((todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      )))}\n    </ul>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport const getUserByTodo = (userId: number) => {\n  return usersFromServer.find(user => user.id === userId);\n};\n","import React, { useState } from 'react';\nimport './TodoForm.scss';\nimport usersFromServer from '../../api/users';\nimport { Todo, User } from '../../types/types';\nimport { getUserByTodo } from '../../services/posts';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [isTitleErrorShow, setIsTitleErrorShow] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [isUserErrorShow, setIsUserErrorShow] = useState(false);\n\n  function handleTitleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setTitle(event.target.value);\n    setIsTitleErrorShow(false);\n  }\n\n  function handleUserChange(event: { target: { value: string | number; }; }) {\n    setUserId(+event.target.value);\n    setIsUserErrorShow(false);\n  }\n\n  function reset() {\n    setTitle('');\n    setUserId(0);\n  }\n\n  function handleSubmit(event: React.FormEvent): void {\n    event.preventDefault();\n\n    setIsTitleErrorShow(!title.trim());\n    setIsUserErrorShow(userId === 0);\n\n    if (!title.trim() || userId === 0) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserByTodo(userId),\n    });\n\n    reset();\n  }\n\n  return (\n    <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"todo-title\">Title: </label>\n        <input\n          id=\"todo-title\"\n          type=\"text\"\n          placeholder=\"Enter a title\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {isTitleErrorShow\n          && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"post-user\">User: </label>\n        <select\n          id=\"post-user\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {usersFromServer.map((option: User) => (\n            <option\n              value={option.id}\n              key={option.id}\n            >\n              {option.name}\n            </option>\n          ))}\n        </select>\n\n        {isUserErrorShow && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport todosFromServer from './api/todos';\nimport { TodoForm } from './components/TodoForm';\nimport { getUserByTodo } from './services/posts';\nimport { Todo } from './types';\n\nconst getPostsWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserByTodo(todo.userId),\n}));\n\nconst getNewTodoID = (todos: Todo[]) => {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(() => getPostsWithUsers);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoID(todos),\n\n    };\n\n    setTodos(currentTodo => [...currentTodo, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}